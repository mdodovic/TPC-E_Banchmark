IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'HOLDING' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.HOLDING;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'TRADE_HISTORY' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.TRADE_HISTORY;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'SETTLEMENT' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.SETTLEMENT;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'CASH_TRANSACTION' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.CASH_TRANSACTION;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'HOLDING_HISTORY' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.HOLDING_HISTORY;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'TRADE_REQUEST' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.TRADE_REQUEST;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'TRADE' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.TRADE;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'ACCOUNT_PERMISSION' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.ACCOUNT_PERMISSION;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'HOLDING_SUMMARY' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.HOLDING_SUMMARY;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'DAILY_MARKET' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.DAILY_MARKET;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'WATCH_ITEM' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.WATCH_ITEM;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'CUSTOMER_TAXRATE' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.CUSTOMER_TAXRATE;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'FINANCIAL' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.FINANCIAL;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'NEWS_XREF' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.NEWS_XREF;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'LAST_TRADE' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.LAST_TRADE;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'CUSTOMER_ACCOUNT' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.CUSTOMER_ACCOUNT;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'COMPANY_COMPETITOR' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.COMPANY_COMPETITOR;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'SECURITY' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.SECURITY;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'COMPANY' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.COMPANY;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'COMMISSION_RATE' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.COMMISSION_RATE;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'EXCHANGE' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.EXCHANGE;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'WATCH_LIST' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.WATCH_LIST;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'CUSTOMER' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.CUSTOMER;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'ADDRESS' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.ADDRESS;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'ZIP_CODE' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.ZIP_CODE;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'TAXRATE' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.TAXRATE;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'BROKER' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.BROKER;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'STATUS_TYPE' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.STATUS_TYPE;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'INDUSTRY' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.INDUSTRY;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'SECTOR' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.SECTOR;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'NEWS_ITEM' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.NEWS_ITEM;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'CHARGE' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.CHARGE;

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME = 'TRADE_TYPE' AND TABLE_SCHEMA = 'dbo') 
DROP TABLE dbo.TRADE_TYPE;
CREATE TABLE [TRADE_TYPE] (
	[TT_ID] CHAR(3) Not Null,
	[TT_NAME] CHAR(12) Not Null,
	[TT_IS_SELL] bit Not Null,
	[TT_IS_MRKT] bit Not Null
);
ALTER TABLE [TRADE_TYPE] ADD CONSTRAINT TRADE_TYPE_PK PRIMARY KEY (TT_ID); 

CREATE TABLE [CHARGE] (
	[CH_TT_ID] CHAR(3) Not Null,
	[CH_C_TIER] smallint Not Null,
	[CH_CHRG] decimal(15,2) Not Null
);
ALTER TABLE [CHARGE] ADD CONSTRAINT CHARGE_PK PRIMARY KEY (CH_TT_ID,CH_C_TIER); 
ALTER TABLE [CHARGE] ADD CONSTRAINT FK_CHARGE_CH_TT_ID_TRADE_TYPE_TT_ID FOREIGN KEY (CH_TT_ID) REFERENCES TRADE_TYPE(TT_ID);
CREATE TABLE [NEWS_ITEM] (
	[NI_ID] bigint Not Null,
	[NI_HEADLINE] CHAR(80) Not Null,
	[NI_SUMMARY] CHAR(255) Not Null,
	[NI_ITEM] varchar(MAX) Not Null,
	[NI_DTS] DATETIME Not Null,
	[NI_SOURCE] CHAR(30) Not Null,
	[NI_AUTHOR] CHAR(30) 
);
ALTER TABLE [NEWS_ITEM] ADD CONSTRAINT NEWS_ITEM_PK PRIMARY KEY (NI_ID); 

CREATE TABLE [SECTOR] (
	[SC_ID] CHAR(2) Not Null,
	[SC_NAME] CHAR(30) Not Null
);
ALTER TABLE [SECTOR] ADD CONSTRAINT SECTOR_PK PRIMARY KEY (SC_ID); 

CREATE TABLE [INDUSTRY] (
	[IN_ID] CHAR(2) Not Null,
	[IN_NAME] CHAR(50) Not Null,
	[IN_SC_ID] CHAR(2) Not Null
);
ALTER TABLE [INDUSTRY] ADD CONSTRAINT INDUSTRY_PK PRIMARY KEY (IN_ID); 
ALTER TABLE [INDUSTRY] ADD CONSTRAINT FK_INDUSTRY_IN_SC_ID_SECTOR_SC_ID FOREIGN KEY (IN_SC_ID) REFERENCES SECTOR(SC_ID);
CREATE TABLE [STATUS_TYPE] (
	[ST_ID] CHAR(4) Not Null,
	[ST_NAME] CHAR(10) Not Null
);
ALTER TABLE [STATUS_TYPE] ADD CONSTRAINT STATUS_TYPE_PK PRIMARY KEY (ST_ID); 

CREATE TABLE [BROKER] (
	[B_ID] bigint Not Null,
	[B_ST_ID] CHAR(4) Not Null,
	[B_NAME] CHAR(49) Not Null,
	[B_NUM_TRADES] int Not Null,
	[B_COMM_TOTAL] decimal(12,2) Not Null
);
ALTER TABLE [BROKER] ADD CONSTRAINT BROKER_PK PRIMARY KEY (B_ID); 
ALTER TABLE [BROKER] ADD CONSTRAINT FK_BROKER_B_ST_ID_STATUS_TYPE_ST_ID FOREIGN KEY (B_ST_ID) REFERENCES STATUS_TYPE(ST_ID);
CREATE TABLE [TAXRATE] (
	[TX_ID] CHAR(4) Not Null,
	[TX_NAME] CHAR(50) Not Null,
	[TX_RATE] decimal(6,5) Not Null
);
ALTER TABLE [TAXRATE] ADD CONSTRAINT TAXRATE_PK PRIMARY KEY (TX_ID); 

CREATE TABLE [ZIP_CODE] (
	[ZC_CODE] CHAR(12) Not Null,
	[ZC_TOWN] CHAR(80) Not Null,
	[ZC_DIV] CHAR(80) Not Null
);
ALTER TABLE [ZIP_CODE] ADD CONSTRAINT ZIP_CODE_PK PRIMARY KEY (ZC_CODE); 

CREATE TABLE [ADDRESS] (
	[AD_ID] bigint Not Null,
	[AD_LINE1] CHAR(80) ,
	[AD_LINE2] CHAR(80) ,
	[AD_ZC_CODE] CHAR(12) Not Null,
	[AD_CTRY] CHAR(80) 
);
ALTER TABLE [ADDRESS] ADD CONSTRAINT ADDRESS_PK PRIMARY KEY (AD_ID); 
ALTER TABLE [ADDRESS] ADD CONSTRAINT FK_ADDRESS_AD_ZC_CODE_ZIP_CODE_ZC_CODE FOREIGN KEY (AD_ZC_CODE) REFERENCES ZIP_CODE(ZC_CODE);
CREATE TABLE [CUSTOMER] (
	[C_ID] bigint Not Null,
	[C_TAX_ID] CHAR(20) Not Null,
	[C_ST_ID] CHAR(4) Not Null,
	[C_L_NAME] CHAR(25) Not Null,
	[C_F_NAME] CHAR(20) Not Null,
	[C_M_NAME] CHAR(1) ,
	[C_GNDR] CHAR(1) ,
	[C_TIER] smallint Not Null,
	[C_DOB] DATE Not Null,
	[C_AD_ID] bigint Not Null,
	[C_CTRY_1] CHAR(3) ,
	[C_AREA_1] CHAR(3) ,
	[C_LOCAL_1] CHAR(10) ,
	[C_EXT_1] CHAR(5) ,
	[C_CTRY_2] CHAR(3) ,
	[C_AREA_2] CHAR(3) ,
	[C_LOCAL_2] CHAR(10) ,
	[C_EXT_2] CHAR(5) ,
	[C_CTRY_3] CHAR(3) ,
	[C_AREA_3] CHAR(3) ,
	[C_LOCAL_3] CHAR(10) ,
	[C_EXT_3] CHAR(5) ,
	[C_EMAIL_1] CHAR(50) ,
	[C_EMAIL_2] CHAR(50) 
);
ALTER TABLE [CUSTOMER] ADD CONSTRAINT CUSTOMER_PK PRIMARY KEY (C_ID); 
ALTER TABLE [CUSTOMER] ADD CONSTRAINT FK_CUSTOMER_C_ST_ID_STATUS_TYPE_ST_ID FOREIGN KEY (C_ST_ID) REFERENCES STATUS_TYPE(ST_ID);
ALTER TABLE [CUSTOMER] ADD CONSTRAINT FK_CUSTOMER_C_AD_ID_ADDRESS_AD_ID FOREIGN KEY (C_AD_ID) REFERENCES ADDRESS(AD_ID);
CREATE TABLE [WATCH_LIST] (
	[WL_ID] bigint Not Null,
	[WL_C_ID] bigint Not Null
);
ALTER TABLE [WATCH_LIST] ADD CONSTRAINT WATCH_LIST_PK PRIMARY KEY (WL_ID); 
ALTER TABLE [WATCH_LIST] ADD CONSTRAINT FK_WATCH_LIST_WL_C_ID_CUSTOMER_C_ID FOREIGN KEY (WL_C_ID) REFERENCES CUSTOMER(C_ID);
CREATE TABLE [EXCHANGE] (
	[EX_ID] CHAR(6) Not Null,
	[EX_NAME] CHAR(100) Not Null,
	[EX_NUM_SYMB] int Not Null,
	[EX_OPEN] smallint Not Null,
	[EX_CLOSE] smallint Not Null,
	[EX_DESC] CHAR(150) ,
	[EX_AD_ID] bigint Not Null
);
ALTER TABLE [EXCHANGE] ADD CONSTRAINT EXCHANGE_PK PRIMARY KEY (EX_ID); 
ALTER TABLE [EXCHANGE] ADD CONSTRAINT FK_EXCHANGE_EX_AD_ID_ADDRESS_AD_ID FOREIGN KEY (EX_AD_ID) REFERENCES ADDRESS(AD_ID);
CREATE TABLE [COMMISSION_RATE] (
	[CR_C_TIER] smallint Not Null,
	[CR_TT_ID] CHAR(3) Not Null,
	[CR_EX_ID] CHAR(6) Not Null,
	[CR_FROM_QTY] int Not Null,
	[CR_TO_QTY] int Not Null,
	[CR_RATE] decimal(5,2) Not Null
);
ALTER TABLE [COMMISSION_RATE] ADD CONSTRAINT COMMISSION_RATE_PK PRIMARY KEY (CR_C_TIER,CR_TT_ID,CR_EX_ID,CR_FROM_QTY); 
ALTER TABLE [COMMISSION_RATE] ADD CONSTRAINT FK_COMMISSION_RATE_CR_TT_ID_TRADE_TYPE_TT_ID FOREIGN KEY (CR_TT_ID) REFERENCES TRADE_TYPE(TT_ID);
ALTER TABLE [COMMISSION_RATE] ADD CONSTRAINT FK_COMMISSION_RATE_CR_EX_ID_EXCHANGE_EX_ID FOREIGN KEY (CR_EX_ID) REFERENCES EXCHANGE(EX_ID);
CREATE TABLE [COMPANY] (
	[CO_ID] bigint Not Null,
	[CO_ST_ID] CHAR(4) Not Null,
	[CO_NAME] CHAR(60) Not Null,
	[CO_IN_ID] CHAR(2) Not Null,
	[CO_SP_RATE] CHAR(4) Not Null,
	[CO_CEO] CHAR(46) Not Null,
	[CO_AD_ID] bigint Not Null,
	[CO_DESC] CHAR(150) Not Null,
	[CO_OPEN_DATE] DATE Not Null
);
ALTER TABLE [COMPANY] ADD CONSTRAINT COMPANY_PK PRIMARY KEY (CO_ID); 
ALTER TABLE [COMPANY] ADD CONSTRAINT FK_COMPANY_CO_ST_ID_STATUS_TYPE_ST_ID FOREIGN KEY (CO_ST_ID) REFERENCES STATUS_TYPE(ST_ID);
ALTER TABLE [COMPANY] ADD CONSTRAINT FK_COMPANY_CO_IN_ID_INDUSTRY_IN_ID FOREIGN KEY (CO_IN_ID) REFERENCES INDUSTRY(IN_ID);
ALTER TABLE [COMPANY] ADD CONSTRAINT FK_COMPANY_CO_AD_ID_ADDRESS_AD_ID FOREIGN KEY (CO_AD_ID) REFERENCES ADDRESS(AD_ID);
CREATE TABLE [SECURITY] (
	[S_SYMB] CHAR(15) Not Null,
	[S_ISSUE] CHAR(6) Not Null,
	[S_ST_ID] CHAR(4) Not Null,
	[S_NAME] CHAR(70) Not Null,
	[S_EX_ID] CHAR(6) Not Null,
	[S_CO_ID] bigint Not Null,
	[S_NUM_OUT] bigint Not Null,
	[S_START_DATE] DATE Not Null,
	[S_EXCH_DATE] DATE Not Null,
	[S_PE] decimal(15,2) Not Null,
	[S_52WK_HIGH] decimal(10,2) Not Null,
	[S_52WK_HIGH_DATE] DATE Not Null,
	[S_52WK_LOW] decimal(10,2) Not Null,
	[S_52WK_LOW_DATE] DATE Not Null,
	[S_DIVIDEND] decimal(15,2) Not Null,
	[S_YIELD] decimal(5,2) Not Null
);
ALTER TABLE [SECURITY] ADD CONSTRAINT SECURITY_PK PRIMARY KEY (S_SYMB); 
ALTER TABLE [SECURITY] ADD CONSTRAINT FK_SECURITY_S_ST_ID_STATUS_TYPE_ST_ID FOREIGN KEY (S_ST_ID) REFERENCES STATUS_TYPE(ST_ID);
ALTER TABLE [SECURITY] ADD CONSTRAINT FK_SECURITY_S_EX_ID_EXCHANGE_EX_ID FOREIGN KEY (S_EX_ID) REFERENCES EXCHANGE(EX_ID);
ALTER TABLE [SECURITY] ADD CONSTRAINT FK_SECURITY_S_CO_ID_COMPANY_CO_ID FOREIGN KEY (S_CO_ID) REFERENCES COMPANY(CO_ID);
CREATE TABLE [COMPANY_COMPETITOR] (
	[CP_CO_ID] bigint Not Null,
	[CP_COMP_CO_ID] bigint Not Null,
	[CP_IN_ID] CHAR(2) Not Null
);
ALTER TABLE [COMPANY_COMPETITOR] ADD CONSTRAINT COMPANY_COMPETITOR_PK PRIMARY KEY (CP_CO_ID,CP_COMP_CO_ID,CP_IN_ID); 
ALTER TABLE [COMPANY_COMPETITOR] ADD CONSTRAINT FK_COMPANY_COMPETITOR_CP_CO_ID_COMPANY_CO_ID FOREIGN KEY (CP_CO_ID) REFERENCES COMPANY(CO_ID);
ALTER TABLE [COMPANY_COMPETITOR] ADD CONSTRAINT FK_COMPANY_COMPETITOR_CP_COMP_CO_ID_COMPANY_CO_ID FOREIGN KEY (CP_COMP_CO_ID) REFERENCES COMPANY(CO_ID);
ALTER TABLE [COMPANY_COMPETITOR] ADD CONSTRAINT FK_COMPANY_COMPETITOR_CP_IN_ID_INDUSTRY_IN_ID FOREIGN KEY (CP_IN_ID) REFERENCES INDUSTRY(IN_ID);
CREATE TABLE [CUSTOMER_ACCOUNT] (
	[CA_ID] bigint Not Null,
	[CA_B_ID] bigint Not Null,
	[CA_C_ID] bigint Not Null,
	[CA_NAME] CHAR(50) ,
	[CA_TAX_ST] smallint Not Null,
	[CA_BAL] decimal(12,2) Not Null
);
ALTER TABLE [CUSTOMER_ACCOUNT] ADD CONSTRAINT CUSTOMER_ACCOUNT_PK PRIMARY KEY (CA_ID); 
ALTER TABLE [CUSTOMER_ACCOUNT] ADD CONSTRAINT FK_CUSTOMER_ACCOUNT_CA_B_ID_BROKER_B_ID FOREIGN KEY (CA_B_ID) REFERENCES BROKER(B_ID);
ALTER TABLE [CUSTOMER_ACCOUNT] ADD CONSTRAINT FK_CUSTOMER_ACCOUNT_CA_C_ID_CUSTOMER_C_ID FOREIGN KEY (CA_C_ID) REFERENCES CUSTOMER(C_ID);
CREATE TABLE [LAST_TRADE] (
	[LT_S_SYMB] CHAR(15) Not Null,
	[LT_DTS] DATETIME Not Null,
	[LT_PRICE] decimal(10,2) Not Null,
	[LT_OPEN_PRICE] decimal(10,2) Not Null,
	[LT_VOL] bigint Not Null
);
ALTER TABLE [LAST_TRADE] ADD CONSTRAINT LAST_TRADE_PK PRIMARY KEY (LT_S_SYMB); 
ALTER TABLE [LAST_TRADE] ADD CONSTRAINT FK_LAST_TRADE_LT_S_SYMB_SECURITY_S_SYMB FOREIGN KEY (LT_S_SYMB) REFERENCES SECURITY(S_SYMB);
CREATE TABLE [NEWS_XREF] (
	[NX_NI_ID] bigint Not Null,
	[NX_CO_ID] bigint Not Null
);
ALTER TABLE [NEWS_XREF] ADD CONSTRAINT NEWS_XREF_PK PRIMARY KEY (NX_NI_ID,NX_CO_ID); 
ALTER TABLE [NEWS_XREF] ADD CONSTRAINT FK_NEWS_XREF_NX_NI_ID_NEWS_ITEM_NI_ID FOREIGN KEY (NX_NI_ID) REFERENCES NEWS_ITEM(NI_ID);
ALTER TABLE [NEWS_XREF] ADD CONSTRAINT FK_NEWS_XREF_NX_CO_ID_COMPANY_CO_ID FOREIGN KEY (NX_CO_ID) REFERENCES COMPANY(CO_ID);
CREATE TABLE [FINANCIAL] (
	[FI_CO_ID] bigint Not Null,
	[FI_YEAR] smallint Not Null,
	[FI_QTR] smallint Not Null,
	[FI_QTR_START_DATE] DATE Not Null,
	[FI_REVENUE] decimal(15,2) Not Null,
	[FI_NET_EARN] decimal(15,2) Not Null,
	[FI_BASIC_EPS] decimal(15,2) Not Null,
	[FI_DILUT_EPS] decimal(15,2) Not Null,
	[FI_MARGIN] decimal(15,2) Not Null,
	[FI_INVENTORY] decimal(15,2) Not Null,
	[FI_ASSETS] decimal(15,2) Not Null,
	[FI_LIABILITY] decimal(15,2) Not Null,
	[FI_OUT_BASIC] bigint Not Null,
	[FI_OUT_DILUT] bigint Not Null
);
ALTER TABLE [FINANCIAL] ADD CONSTRAINT FINANCIAL_PK PRIMARY KEY (FI_CO_ID,FI_YEAR,FI_QTR); 
ALTER TABLE [FINANCIAL] ADD CONSTRAINT FK_FINANCIAL_FI_CO_ID_COMPANY_CO_ID FOREIGN KEY (FI_CO_ID) REFERENCES COMPANY(CO_ID);
CREATE TABLE [CUSTOMER_TAXRATE] (
	[CX_TX_ID] CHAR(4) Not Null,
	[CX_C_ID] bigint Not Null
);
ALTER TABLE [CUSTOMER_TAXRATE] ADD CONSTRAINT CUSTOMER_TAXRATE_PK PRIMARY KEY (CX_TX_ID,CX_C_ID); 
ALTER TABLE [CUSTOMER_TAXRATE] ADD CONSTRAINT FK_CUSTOMER_TAXRATE_CX_TX_ID_TAXRATE_TX_ID FOREIGN KEY (CX_TX_ID) REFERENCES TAXRATE(TX_ID);
ALTER TABLE [CUSTOMER_TAXRATE] ADD CONSTRAINT FK_CUSTOMER_TAXRATE_CX_C_ID_CUSTOMER_C_ID FOREIGN KEY (CX_C_ID) REFERENCES CUSTOMER(C_ID);
CREATE TABLE [WATCH_ITEM] (
	[WI_WL_ID] bigint Not Null,
	[WI_S_SYMB] CHAR(15) Not Null
);
ALTER TABLE [WATCH_ITEM] ADD CONSTRAINT WATCH_ITEM_PK PRIMARY KEY (WI_WL_ID,WI_S_SYMB); 
ALTER TABLE [WATCH_ITEM] ADD CONSTRAINT FK_WATCH_ITEM_WI_WL_ID_WATCH_LIST_WL_ID FOREIGN KEY (WI_WL_ID) REFERENCES WATCH_LIST(WL_ID);
ALTER TABLE [WATCH_ITEM] ADD CONSTRAINT FK_WATCH_ITEM_WI_S_SYMB_SECURITY_S_SYMB FOREIGN KEY (WI_S_SYMB) REFERENCES SECURITY(S_SYMB);
CREATE TABLE [DAILY_MARKET] (
	[DM_DATE] DATE Not Null,
	[DM_S_SYMB] CHAR(15) Not Null,
	[DM_CLOSE] decimal(10,2) Not Null,
	[DM_HIGH] decimal(10,2) Not Null,
	[DM_LOW] decimal(10,2) Not Null,
	[DM_VOL] bigint Not Null
);
ALTER TABLE [DAILY_MARKET] ADD CONSTRAINT DAILY_MARKET_PK PRIMARY KEY (DM_DATE,DM_S_SYMB); 
ALTER TABLE [DAILY_MARKET] ADD CONSTRAINT FK_DAILY_MARKET_DM_S_SYMB_SECURITY_S_SYMB FOREIGN KEY (DM_S_SYMB) REFERENCES SECURITY(S_SYMB);
CREATE TABLE [HOLDING_SUMMARY] (
	[HS_CA_ID] bigint Not Null,
	[HS_S_SYMB] CHAR(15) Not Null,
	[HS_QTY] int Not Null
);
ALTER TABLE [HOLDING_SUMMARY] ADD CONSTRAINT HOLDING_SUMMARY_PK PRIMARY KEY (HS_CA_ID,HS_S_SYMB); 
ALTER TABLE [HOLDING_SUMMARY] ADD CONSTRAINT FK_HOLDING_SUMMARY_HS_CA_ID_CUSTOMER_ACCOUNT_CA_ID FOREIGN KEY (HS_CA_ID) REFERENCES CUSTOMER_ACCOUNT(CA_ID);
ALTER TABLE [HOLDING_SUMMARY] ADD CONSTRAINT FK_HOLDING_SUMMARY_HS_S_SYMB_SECURITY_S_SYMB FOREIGN KEY (HS_S_SYMB) REFERENCES SECURITY(S_SYMB);
CREATE TABLE [ACCOUNT_PERMISSION] (
	[AP_CA_ID] bigint Not Null,
	[AP_ACL] CHAR(4) Not Null,
	[AP_TAX_ID] CHAR(20) Not Null,
	[AP_L_NAME] CHAR(25) Not Null,
	[AP_F_NAME] CHAR(20) Not Null
);
ALTER TABLE [ACCOUNT_PERMISSION] ADD CONSTRAINT ACCOUNT_PERMISSION_PK PRIMARY KEY (AP_CA_ID,AP_TAX_ID); 
ALTER TABLE [ACCOUNT_PERMISSION] ADD CONSTRAINT FK_ACCOUNT_PERMISSION_AP_CA_ID_CUSTOMER_ACCOUNT_CA_ID FOREIGN KEY (AP_CA_ID) REFERENCES CUSTOMER_ACCOUNT(CA_ID);
CREATE TABLE [TRADE] (
	[T_ID] bigint Not Null,
	[T_DTS] DATETIME Not Null,
	[T_ST_ID] CHAR(4) Not Null,
	[T_TT_ID] CHAR(3) Not Null,
	[T_IS_CASH] bit Not Null,
	[T_S_SYMB] CHAR(15) Not Null,
	[T_QTY] int Not Null,
	[T_BID_PRICE] decimal(10,2) Not Null,
	[T_CA_ID] bigint Not Null,
	[T_EXEC_NAME] CHAR(49) Not Null,
	[T_TRADE_PRICE] decimal(10,2) ,
	[T_CHRG] decimal(15,2) Not Null,
	[T_COMM] decimal(15,2) Not Null,
	[T_TAX] decimal(15,2) Not Null,
	[T_LIFO] bit Not Null
);
ALTER TABLE [TRADE] ADD CONSTRAINT TRADE_PK PRIMARY KEY (T_ID); 
ALTER TABLE [TRADE] ADD CONSTRAINT FK_TRADE_T_ST_ID_STATUS_TYPE_ST_ID FOREIGN KEY (T_ST_ID) REFERENCES STATUS_TYPE(ST_ID);
ALTER TABLE [TRADE] ADD CONSTRAINT FK_TRADE_T_TT_ID_TRADE_TYPE_TT_ID FOREIGN KEY (T_TT_ID) REFERENCES TRADE_TYPE(TT_ID);
ALTER TABLE [TRADE] ADD CONSTRAINT FK_TRADE_T_S_SYMB_SECURITY_S_SYMB FOREIGN KEY (T_S_SYMB) REFERENCES SECURITY(S_SYMB);
ALTER TABLE [TRADE] ADD CONSTRAINT FK_TRADE_T_CA_ID_CUSTOMER_ACCOUNT_CA_ID FOREIGN KEY (T_CA_ID) REFERENCES CUSTOMER_ACCOUNT(CA_ID);
CREATE TABLE [TRADE_REQUEST] (
	[TR_T_ID] bigint Not Null,
	[TR_TT_ID] CHAR(3) Not Null,
	[TR_S_SYMB] CHAR(15) Not Null,
	[TR_QTY] int Not Null,
	[TR_BID_PRICE] decimal(10,2) Not Null,
	[TR_B_ID] bigint Not Null
);
ALTER TABLE [TRADE_REQUEST] ADD CONSTRAINT TRADE_REQUEST_PK PRIMARY KEY (TR_T_ID); 
ALTER TABLE [TRADE_REQUEST] ADD CONSTRAINT FK_TRADE_REQUEST_TR_T_ID_TRADE_T_ID FOREIGN KEY (TR_T_ID) REFERENCES TRADE(T_ID);
ALTER TABLE [TRADE_REQUEST] ADD CONSTRAINT FK_TRADE_REQUEST_TR_TT_ID_TRADE_TYPE_TT_ID FOREIGN KEY (TR_TT_ID) REFERENCES TRADE_TYPE(TT_ID);
ALTER TABLE [TRADE_REQUEST] ADD CONSTRAINT FK_TRADE_REQUEST_TR_S_SYMB_SECURITY_S_SYMB FOREIGN KEY (TR_S_SYMB) REFERENCES SECURITY(S_SYMB);
ALTER TABLE [TRADE_REQUEST] ADD CONSTRAINT FK_TRADE_REQUEST_TR_B_ID_BROKER_B_ID FOREIGN KEY (TR_B_ID) REFERENCES BROKER(B_ID);
CREATE TABLE [HOLDING_HISTORY] (
	[HH_H_T_ID] bigint Not Null,
	[HH_T_ID] bigint Not Null,
	[HH_BEFORE_QTY] int Not Null,
	[HH_AFTER_QTY] int Not Null
);
ALTER TABLE [HOLDING_HISTORY] ADD CONSTRAINT HOLDING_HISTORY_PK PRIMARY KEY (HH_H_T_ID,HH_T_ID); 
ALTER TABLE [HOLDING_HISTORY] ADD CONSTRAINT FK_HOLDING_HISTORY_HH_H_T_ID_TRADE_T_ID FOREIGN KEY (HH_H_T_ID) REFERENCES TRADE(T_ID);
ALTER TABLE [HOLDING_HISTORY] ADD CONSTRAINT FK_HOLDING_HISTORY_HH_T_ID_TRADE_T_ID FOREIGN KEY (HH_T_ID) REFERENCES TRADE(T_ID);
CREATE TABLE [CASH_TRANSACTION] (
	[CT_T_ID] bigint Not Null,
	[CT_DTS] DATETIME Not Null,
	[CT_AMT] decimal(15,2) Not Null,
	[CT_NAME] CHAR(100) 
);
ALTER TABLE [CASH_TRANSACTION] ADD CONSTRAINT CASH_TRANSACTION_PK PRIMARY KEY (CT_T_ID); 
ALTER TABLE [CASH_TRANSACTION] ADD CONSTRAINT FK_CASH_TRANSACTION_CT_T_ID_TRADE_T_ID FOREIGN KEY (CT_T_ID) REFERENCES TRADE(T_ID);
CREATE TABLE [SETTLEMENT] (
	[SE_T_ID] bigint Not Null,
	[SE_CASH_TYPE] CHAR(40) Not Null,
	[SE_CASH_DUE_DATE] DATE Not Null,
	[SE_AMT] decimal(15,2) Not Null
);
ALTER TABLE [SETTLEMENT] ADD CONSTRAINT SETTLEMENT_PK PRIMARY KEY (SE_T_ID); 
ALTER TABLE [SETTLEMENT] ADD CONSTRAINT FK_SETTLEMENT_SE_T_ID_TRADE_T_ID FOREIGN KEY (SE_T_ID) REFERENCES TRADE(T_ID);
CREATE TABLE [TRADE_HISTORY] (
	[TH_T_ID] bigint Not Null,
	[TH_DTS] DATETIME Not Null,
	[TH_ST_ID] CHAR(4) Not Null
);
ALTER TABLE [TRADE_HISTORY] ADD CONSTRAINT TRADE_HISTORY_PK PRIMARY KEY (TH_T_ID,TH_ST_ID); 
ALTER TABLE [TRADE_HISTORY] ADD CONSTRAINT FK_TRADE_HISTORY_TH_T_ID_TRADE_T_ID FOREIGN KEY (TH_T_ID) REFERENCES TRADE(T_ID);
ALTER TABLE [TRADE_HISTORY] ADD CONSTRAINT FK_TRADE_HISTORY_TH_ST_ID_STATUS_TYPE_ST_ID FOREIGN KEY (TH_ST_ID) REFERENCES STATUS_TYPE(ST_ID);
CREATE TABLE [HOLDING] (
	[H_T_ID] bigint Not Null,
	[H_CA_ID] bigint Not Null,
	[H_S_SYMB] CHAR(15) Not Null,
	[H_DTS] DATETIME Not Null,
	[H_PRICE] decimal(10,2) Not Null,
	[H_QTY] int Not Null
);
ALTER TABLE [HOLDING] ADD CONSTRAINT HOLDING_PK PRIMARY KEY (H_T_ID); 
ALTER TABLE [HOLDING] ADD CONSTRAINT FK_HOLDING_H_T_ID_TRADE_T_ID FOREIGN KEY (H_T_ID) REFERENCES TRADE(T_ID);
ALTER TABLE [HOLDING] ADD CONSTRAINT FK_HOLDING_H_CA_ID_H_S_SYMB_HOLDING_SUMMARY_HS_CA_ID_HS_S_SYMB FOREIGN KEY (H_CA_ID,H_S_SYMB) REFERENCES HOLDING_SUMMARY(HS_CA_ID,HS_S_SYMB);
